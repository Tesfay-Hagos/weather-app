// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: internal/services/weather/pb/weather.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateProductRequest represents a request to create a product.
type CreateWeatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City      string               `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	StartDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *CreateWeatherRequest) Reset() {
	*x = CreateWeatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_services_weather_pb_weather_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWeatherRequest) ProtoMessage() {}

func (x *CreateWeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_services_weather_pb_weather_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWeatherRequest.ProtoReflect.Descriptor instead.
func (*CreateWeatherRequest) Descriptor() ([]byte, []int) {
	return file_internal_services_weather_pb_weather_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWeatherRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateWeatherRequest) GetStartDate() *timestamp.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateWeatherRequest) GetEndDate() *timestamp.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

// Weather represents the overall weather data
type CreateWeatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64     `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64     `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Address   string      `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Timezone  string      `protobuf:"bytes,4,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Days      []*BasicDay `protobuf:"bytes,5,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *CreateWeatherResponse) Reset() {
	*x = CreateWeatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_services_weather_pb_weather_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWeatherResponse) ProtoMessage() {}

func (x *CreateWeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_services_weather_pb_weather_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWeatherResponse.ProtoReflect.Descriptor instead.
func (*CreateWeatherResponse) Descriptor() ([]byte, []int) {
	return file_internal_services_weather_pb_weather_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWeatherResponse) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateWeatherResponse) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CreateWeatherResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateWeatherResponse) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *CreateWeatherResponse) GetDays() []*BasicDay {
	if x != nil {
		return x.Days
	}
	return nil
}

// BasicDay represents the essential weather data for a specific day
type BasicDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime   string       `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime,omitempty"`
	TempMax    float64      `protobuf:"fixed64,2,opt,name=tempMax,proto3" json:"tempMax,omitempty"`
	TempMin    float64      `protobuf:"fixed64,3,opt,name=tempMin,proto3" json:"tempMin,omitempty"`
	Conditions string       `protobuf:"bytes,4,opt,name=conditions,proto3" json:"conditions,omitempty"`
	PrecipProb float64      `protobuf:"fixed64,5,opt,name=precipProb,proto3" json:"precipProb,omitempty"`
	WindSpeed  float64      `protobuf:"fixed64,6,opt,name=windSpeed,proto3" json:"windSpeed,omitempty"`
	WindDir    float64      `protobuf:"fixed64,7,opt,name=windDir,proto3" json:"windDir,omitempty"`
	Humidity   float64      `protobuf:"fixed64,8,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Hours      []*BasicHour `protobuf:"bytes,9,rep,name=hours,proto3" json:"hours,omitempty"`
}

func (x *BasicDay) Reset() {
	*x = BasicDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_services_weather_pb_weather_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicDay) ProtoMessage() {}

func (x *BasicDay) ProtoReflect() protoreflect.Message {
	mi := &file_internal_services_weather_pb_weather_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicDay.ProtoReflect.Descriptor instead.
func (*BasicDay) Descriptor() ([]byte, []int) {
	return file_internal_services_weather_pb_weather_proto_rawDescGZIP(), []int{2}
}

func (x *BasicDay) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *BasicDay) GetTempMax() float64 {
	if x != nil {
		return x.TempMax
	}
	return 0
}

func (x *BasicDay) GetTempMin() float64 {
	if x != nil {
		return x.TempMin
	}
	return 0
}

func (x *BasicDay) GetConditions() string {
	if x != nil {
		return x.Conditions
	}
	return ""
}

func (x *BasicDay) GetPrecipProb() float64 {
	if x != nil {
		return x.PrecipProb
	}
	return 0
}

func (x *BasicDay) GetWindSpeed() float64 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *BasicDay) GetWindDir() float64 {
	if x != nil {
		return x.WindDir
	}
	return 0
}

func (x *BasicDay) GetHumidity() float64 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *BasicDay) GetHours() []*BasicHour {
	if x != nil {
		return x.Hours
	}
	return nil
}

// BasicHour represents the essential weather data for a specific hour
type BasicHour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime   string  `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Temp       float64 `protobuf:"fixed64,2,opt,name=temp,proto3" json:"temp,omitempty"`
	Conditions string  `protobuf:"bytes,3,opt,name=conditions,proto3" json:"conditions,omitempty"`
	PrecipProb float64 `protobuf:"fixed64,4,opt,name=precipProb,proto3" json:"precipProb,omitempty"`
	WindSpeed  float64 `protobuf:"fixed64,5,opt,name=windSpeed,proto3" json:"windSpeed,omitempty"`
	Humidity   float64 `protobuf:"fixed64,6,opt,name=humidity,proto3" json:"humidity,omitempty"`
}

func (x *BasicHour) Reset() {
	*x = BasicHour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_services_weather_pb_weather_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicHour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicHour) ProtoMessage() {}

func (x *BasicHour) ProtoReflect() protoreflect.Message {
	mi := &file_internal_services_weather_pb_weather_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicHour.ProtoReflect.Descriptor instead.
func (*BasicHour) Descriptor() ([]byte, []int) {
	return file_internal_services_weather_pb_weather_proto_rawDescGZIP(), []int{3}
}

func (x *BasicHour) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *BasicHour) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *BasicHour) GetConditions() string {
	if x != nil {
		return x.Conditions
	}
	return ""
}

func (x *BasicHour) GetPrecipProb() float64 {
	if x != nil {
		return x.PrecipProb
	}
	return 0
}

func (x *BasicHour) GetWindSpeed() float64 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *BasicHour) GetHumidity() float64 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

var File_internal_services_weather_pb_weather_proto protoreflect.FileDescriptor

var file_internal_services_weather_pb_weather_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x44, 0x61, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x22, 0x98, 0x02, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x69, 0x63, 0x44, 0x61,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x65, 0x6d, 0x70, 0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x74, 0x65, 0x6d, 0x70, 0x4d, 0x61, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x4d,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x4d, 0x69,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x50, 0x72, 0x6f,
	0x62, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x68, 0x75, 0x6d,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x48, 0x6f, 0x75, 0x72, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x22,
	0xb5, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x68,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x32, 0x60, 0x0a, 0x0e, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x20, 0x5a, 0x1e, 0x2e, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_internal_services_weather_pb_weather_proto_rawDescOnce sync.Once
	file_internal_services_weather_pb_weather_proto_rawDescData = file_internal_services_weather_pb_weather_proto_rawDesc
)

func file_internal_services_weather_pb_weather_proto_rawDescGZIP() []byte {
	file_internal_services_weather_pb_weather_proto_rawDescOnce.Do(func() {
		file_internal_services_weather_pb_weather_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_services_weather_pb_weather_proto_rawDescData)
	})
	return file_internal_services_weather_pb_weather_proto_rawDescData
}

var file_internal_services_weather_pb_weather_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internal_services_weather_pb_weather_proto_goTypes = []any{
	(*CreateWeatherRequest)(nil),  // 0: weather.CreateWeatherRequest
	(*CreateWeatherResponse)(nil), // 1: weather.CreateWeatherResponse
	(*BasicDay)(nil),              // 2: weather.BasicDay
	(*BasicHour)(nil),             // 3: weather.BasicHour
	(*timestamp.Timestamp)(nil),   // 4: google.protobuf.Timestamp
}
var file_internal_services_weather_pb_weather_proto_depIdxs = []int32{
	4, // 0: weather.CreateWeatherRequest.startDate:type_name -> google.protobuf.Timestamp
	4, // 1: weather.CreateWeatherRequest.endDate:type_name -> google.protobuf.Timestamp
	2, // 2: weather.CreateWeatherResponse.days:type_name -> weather.BasicDay
	3, // 3: weather.BasicDay.hours:type_name -> weather.BasicHour
	0, // 4: weather.WeatherService.CreateWeather:input_type -> weather.CreateWeatherRequest
	1, // 5: weather.WeatherService.CreateWeather:output_type -> weather.CreateWeatherResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_services_weather_pb_weather_proto_init() }
func file_internal_services_weather_pb_weather_proto_init() {
	if File_internal_services_weather_pb_weather_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_services_weather_pb_weather_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWeatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_services_weather_pb_weather_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWeatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_services_weather_pb_weather_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BasicDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_services_weather_pb_weather_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BasicHour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_services_weather_pb_weather_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_services_weather_pb_weather_proto_goTypes,
		DependencyIndexes: file_internal_services_weather_pb_weather_proto_depIdxs,
		MessageInfos:      file_internal_services_weather_pb_weather_proto_msgTypes,
	}.Build()
	File_internal_services_weather_pb_weather_proto = out.File
	file_internal_services_weather_pb_weather_proto_rawDesc = nil
	file_internal_services_weather_pb_weather_proto_goTypes = nil
	file_internal_services_weather_pb_weather_proto_depIdxs = nil
}
